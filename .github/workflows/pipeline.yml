name: Pipeline deployment

on:
  push:
    branches:
      - test_CI
  pull_request:
    branches: [test_CI]
    types: [opened, synchronize]
  workflow_dispatch:
  

env:
  ML_IMAGE_TAG: activelearning_ml:test
  API_IMAGE_TAG: activelearning_api:test
  ML_ENDPOINT: train_and_predict/
  API: api/
  WEBAPP: webapp/

jobs:
  linting:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: flake8 Lint
        uses: py-actions/flake8@v2
        with:
          ignore: "E402"
          max-line-length: "88"
          path: .
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: eslint lint
        working-directory: ${{ env.WEBAPP }}
        run: |
          npm install eslint
          npm install @typescript-eslint/eslint-plugin@latest --save-dev
          npm install @typescript-eslint/parser --save-dev
          npm run lint


  deployment:
    runs-on: ubuntu-20.04
    needs: [linting]
    # if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '50'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push ML_ENDPOINT image
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.ML_ENDPOINT }}
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.ML_IMAGE_TAG }}
      - name: Build and push API image
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.API }}
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.API_IMAGE_TAG }}
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Build and push web app to GH pages
        working-directory: ${{ env.WEBAPP }}
        run: |
          npm rebuild node-sass
          npm install
          npm run build
          npm run deploy
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.38.0
        if: ${{ !contains(join(github.event.commits.*.message, ' '), '#skip') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
